package rosalind

import "testing"

func TestDNA_ToProtein_simple(t *testing.T) {
	t.Parallel()

	const expected = "MAMAPRTEINSTRING"

	dna, _ := NewDNAString("ATGGCCATGGCGCCCAGAACTGAGATCAATAGTACCCGTATTAACGGGTGA")
	proteinDNA, err := dna.ToProtein()
	if err != nil {
		t.Error(err)
	}

	if proteinDNA.String() != expected {
		t.Errorf("expected %q, got %q", expected, proteinDNA.String())
	}

	rna := dna.ToRNA()
	proteinRNA, err := rna.ToProtein()
	if err != nil {
		t.Error(err)
	}

	if proteinRNA.String() != expected {
		t.Errorf("expected %q, got %q", expected, proteinRNA.String())
	}
}

func TestProtein_Weight_simple(t *testing.T) {
	t.Parallel()

	protein, _ := NewProtein([]byte("SKADYEK"))
	if protein.Weight() != 82139192 {
		t.Errorf("expected 82139192, got %d", protein.Weight())
	}

	if protein.WeightFloat() != 821.39192 {
		t.Errorf("expected 821.39192, got %f", protein.WeightFloat())
	}
}

func TestProtein_InferMRNA(t *testing.T) {
	t.Parallel()

	tests := map[string]int64{
		"":   0,
		"M":  3,
		"MA": 12,
		"MVAHYNKLEFYEDAVDNREFAHHWTYTDHKLEVQARSMGICPGITVWDVPGCASTNHIVEARHVSRIAWYTTIQWRLCYMRRRNCQKYIIWMVWCWNREDDQVRVVQLDSKIHKDDIADLITNPHEQSAKNWFWDRWKDSPEAPTKKIDDTQYMPYGEPQCGRLLDISACIITQAPGKIECNGDVCMCYVNSDWWMIEVQEFGSHDSPMNMKWEPSTQEVGVIDETVHLNFIRVRGSNREHPKLYNKCRLKHDLAKYCERFMNWDIVGMNYVQSTPNCWATFYDWNSMVFDQWNCVYTILHAVMWQEPLTMDTDSDNWYMMVLSKLPKCPFEVMPKPLGHSWSTPCGRELTSKEGDVRPSRGPGMYPILKITRPHFFTQQAWKDKMFREPFWSVNPPWIMLVLQKHYLWWFGPSILSPVFCDWFPEISYMPVLQSLDGKDRFNMPSGTEIDTWKKMLQSTLTRWCVRLTTEMNARMFGPTLCKWQNWSNPFKTGHTIAHESVMKNVYKHQDIYFNSTTCWWANNNPHMQTRIDAWSDRLGLPGFWMHIATIVYCNKEYCEGDYSEMSEMHMMECLRHNFPECIMLTKKTAQCNPAKHLVPWMKKLQGTHGSMVYTKRTWRHGGGVVLTLRIFSHDIGSNTKGYILMPNSGEKWIWAACRSWCDINGMNENWNNRNSYHVFPERICEDRKADGEKFVKVHPMIIPAIYFMSLNGVALHDSTWCPIHFAKWGSYSMMNSWQIGDSDCCIMSCTKPGLFQWVPVQRFWVQAIEQQKYQRGVAHTTGDQDAMRHNLTGTLYHSKFVISKNICDVQREMQYTWNTLHWRTPFQANHQDVKFWKDNMFRDIETAYVHFRYCYYEHHRCHGTMHIAWSAEHMNTNKMNLWAFMVVPIDKIAKALHIAEWGAIWRLIKCWHCYARFWFFWIMVWEMLRPEWWGAGCEVWHQLYSRLSYIFHPSMWMQTAVSWSDDGYLEQACTLQNTREHPKQIAVINTAMHNRE": 46272,
	}

	for proteinString, want := range tests {
		t.Run(proteinString, func(t *testing.T) {
			protein, _ := NewProtein([]byte(proteinString))
			got := protein.InferMRNA()
			if got != want {
				t.Errorf("expected %d, got %d", want, got)
			}
		})
	}
}
